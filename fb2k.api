console.ClearBacklog()
console.GetLines([with_timestamp])
console.log(message)

fb.AlwaysOnTop
fb.ComponentPath
fb.CursorFollowPlayback
fb.CustomVolume
fb.FoobarPath
fb.IsPaused
fb.IsPlaying
fb.PlaybackFollowCursor
fb.PlaybackLength
fb.PlaybackTime
fb.ProfilePath
fb.ReplaygainMode
fb.StopAfterCurrent
fb.VersionString
fb.Volume

fb.AddDirectory()
fb.AddFiles()
fb.AddLocationsAsync(window_id, paths)
fb.CheckClipboardContents()
fb.CheckComponent(name)
fb.ClearPlaylist()
fb.CreateContextMenuManager()
fb.CreateHandleList([handle])
fb.CreateMainMenuManager(name)
fb.EnableAdvancedLogging()
fb.Exit()
fb.GetAlbumArtStub([art_id])
fb.GetClipboardContents()
fb.GetDSPPresets()
fb.GetFocusItem()
fb.GetLibraryItems([query])
fb.GetNowPlaying()
fb.GetOutputDevices()
fb.GetSelection([flags])
fb.GetSelectionType()
fb.IsLibraryEnabled()
fb.IsLibraryInitialised()
fb.LoadPlaylist()
fb.Next()
fb.Pause()
fb.Play()
fb.PlayOrPause()
fb.Prev()
fb.Random()
fb.RunContextCommand(command)
fb.RunMainMenuCommand(command)
fb.SavePlaylist()
fb.SetDSPPreset(idx)
fb.SetOutputDevice(output, device)
fb.ShowConsole()
fb.ShowLibrarySearchUI(query)
fb.ShowPictureViewer(path)
fb.ShowPreferences()
fb.Stop()
fb.TitleFormat(pattern)
fb.VolumeDown()
fb.VolumeMute()
fb.VolumeUp()

plman.ActivePlaylist
plman.PlaybackOrder
plman.PlayingPlaylist
plman.PlaylistCount
plman.RecyclerCount

plman.AddLocations(playlistIndex, paths[, select])
plman.AddPlaylistLock(playlistIndex, mask)
plman.ClearPlaylist(playlistIndex)
plman.ClearPlaylistSelection(playlistIndex)
plman.CreateAutoPlaylist(idx, name, query[, sort, flags])
plman.CreatePlaylist([playlistIndex, name])
plman.DuplicatePlaylist(from, name)
plman.ExecutePlaylistDefaultAction(playlistIndex, playlistItemIndex)
plman.FindByGUID(str)
plman.FindOrCreatePlaylist(name, unlocked)
plman.FindPlaylist(name)
plman.GetGUID(playlistIndex)
plman.GetPlaybackOrders();
plman.GetPlayingItemLocation()
plman.GetPlaylistFocusItemIndex(playlistIndex)
plman.GetPlaylistItemCount(playlistIndex)
plman.GetPlaylistItems(playlistIndex)
plman.GetPlaylistLockFilterMask(playlistIndex)
plman.GetPlaylistLockName(playlistIndex)
plman.GetPlaylistName(playlistIndex)
plman.GetPlaylistSelectedIndexes(playlistIndex)
plman.GetPlaylistSelectedItems(playlistIndex)
plman.GetQueryItems(playlistIndex, query)
plman.GetRecyclerItems(idx)
plman.GetRecyclerName(idx)
plman.InsertPlaylistItems(playlistIndex, base, handle_list[, select])
plman.InsertPlaylistItemsFilter(playlistIndex, base, handle_list[, select])
plman.InvertSelection(playlistIndex)
plman.IsAutoPlaylist(playlistIndex)
plman.IsPlaylistItemSelected(playlistIndex, playlistItemIndex)
plman.IsPlaylistLocked(playlistIndex)
plman.MovePlaylist(from, to)
plman.MovePlaylistSelection(playlistIndex, delta)
plman.MovePlaylistSelectionV2(playlistIndex, new_pos)
plman.RecyclerPurge(affectedItems)
plman.RecyclerRestore(idx)
plman.RemovePlaylist(playlistIndex)
plman.RemovePlaylistLock(playlistIndex)
plman.RemovePlaylists(playlistIndexes)
plman.RemovePlaylistSelection(playlistIndex[, crop])
plman.RemovePlaylistSwitch(playlistIndex)
plman.RenamePlaylist(playlistIndex, name)
plman.ReplacePlaylistItem(playlistIndex, playlistItemIndex, handle)
plman.SetActivePlaylistContext()
plman.SelectQueryItems(playlistIndex, query)
plman.SetPlaylistFocusItem(playlistIndex, playlistItemIndex)
plman.SetPlaylistSelection(playlistIndex, affectedItems, state)
plman.SetPlaylistSelectionSingle(playlistIndex, playlistItemIndex, state)
plman.ShowAutoPlaylistUI(playlistIndex)
plman.ShowPlaylistLockUI(playlistIndex)
plman.SortByFormat(playlistIndex, pattern[, selOnly])
plman.SortByFormatV2(playlistIndex, pattern[, direction])
plman.SortPlaylistsByName([direction])
plman.UndoBackup(playlistIndex)

utils.Version
utils.VersionString

utils.CalcTextWidth(text, font_name, font_size_px[, font_weight, font_style, font_stretch])
utils.CheckFont(name)
utils.ColourPicker(default_colour[, error_on_cancel])
utils.ConvertToAscii(str)
utils.CopyFile(from, to, overwrite)
utils.CopyFolder(from, to, overwrite, recur)
utils.CreateFolder(path)
utils.CreateImage(width, height)
utils.CreateProfiler([name])
utils.CreateTextLayout(text, font_name, font_size_px[, font_weight, font_style, font_stretch, text_alignment, paragraph_alignment, word_wrapping, trimming_granularity])
utils.CreateTextLayout2(text, fonts[, text_alignment, paragraph_alignment, word_wrapping, trimming_granularity])
utils.DateStringToTimestamp(str)
utils.DetectCharset(path)
utils.DownloadFileAsync(window_id, url, path)
utils.DownloadImageAsync(window_id, url)
utils.FormatDuration(seconds)
utils.FormatFileSize(bytes)
utils.GetClipboardText()
utils.GetCountryFlag(country_or_code)
utils.GetFileSize(path)
utils.GetLastModified(path)
utils.GetSysColour(index)
utils.GetSystemMetrics(index)
utils.Glob(pattern[, exc_mask, inc_mask])
utils.HTTPRequestAsync(window_id, type, url, user_agent_or_headers, post_data)
utils.InputBox(prompt, title[, default_value, error_on_cancel])
utils.IsFile(path)
utils.IsFolder(folder)
utils.IsKeyPressed(vkey)
utils.ListFiles(folder[, recursive])
utils.ListFolders(folder[, recursive])
utils.ListFonts()
utils.LoadImage(path[, max_size]);
utils.LoadImageAsync(window_id, path)
utils.LoadSVG(path_or_xml[, max_width])
utils.MessageBox(prompt, title, flags)
utils.Now()
utils.ReadINI(path, section, key[, default_value])
utils.ReadTextFile(path[, codepage])
utils.ReadUTF8(path)
utils.RemoveFolderRecursive(path[, options])
utils.RemovePath(path)
utils.RenamePath(from, to)
utils.ReplaceIllegalChars(str[, modern, strip_trailing_periods])
utils.Run(app, params)
utils.RunCmdAsync(window_id, app, params)
utils.SetClipboardText(str)
utils.ShowPopupMessage(msg[, title])
utils.TextBox(prompt, title[, default_value])
utils.TimestampToDateString(ts)
utils.WriteINI(path, section, key, val)
utils.WriteTextFile(path, content)

window.DPI
window.Height
window.ID
window.IsDark
window.IsDefaultUI
window.IsVisible
window.MaxHeight
window.MaxWidth
window.MinHeight
window.MinWidth
window.Name
window.Width

window.ClearInterval(timerID)
window.ClearTimeout(timerID)
window.CreatePopupMenu()
window.CreateTooltip([font_name, font_size_px])
window.GetColourCUI(idx)
window.GetColourDUI(idx)
window.GetFontCUI(idx)
window.GetFontDUI(idx)
window.GetProperty(name[, default_value])
window.NotifyOthers(name, info)
window.Reload([clear_properties])
window.Repaint()
window.RepaintRect(x, y, w, h)
window.SetCursor(id)
window.SetInterval(func, delay)
window.SetPlaylistSelectionTracking()
window.SetPlaylistTracking()
window.SetProperty(name, val)
window.SetSelection(handle_list, type)
window.SetTimeout(func, delay)
window.SetTooltipFont(font_name, font_size_px)
window.ShowConfigure()
window.ShowProperties()

gr.Clear(colour)
gr.DrawEllipse(centreX, centreY, radiusX, radiusY, line_width, colour)
gr.DrawImage(image, dstX, dstY, dstW, dstH, srcX, srcY, srcW, srcH[, opacity, angle])
gr.DrawImageWithMask(image, mask_image, x, y, w, h)
gr.DrawLine(x1, y1, x2, y2, line_width, colour)
gr.DrawRectangle(x, y, w, h, line_width, colour)
gr.DrawRoundedRectangle(x, y, w, h, radiusX, radiusY, line_width, colour)
gr.FillEllipse(centreX, centreY, radiusX, radiusY, colour)
gr.FillRectangle(x, y, w, h, colour)
gr.FillRoundedRectangle(x, y, w, h, radiusX, radiusY, colour)
gr.WriteText(text, font, colour, x, y, w, h[, text_alignment, paragraph_alignment, word_wrapping, trimming_granularity])
gr.WriteText2(text, font, colour, x, y, w, h[, text_alignment, paragraph_alignment, word_wrapping, trimming_granularity])
gr.WriteTextLayout(layout, colour, x, y, w, h[, vertical_offset])

on_always_on_top_changed(state)
on_char(code)
on_colours_changed()
on_console_refresh()
on_cursor_follow_playback_changed(state)
on_download_file_done(path, success, error_text)
on_download_image_done(url, image)
on_drag_drop(action, x, y, mask)
on_drag_enter(action, x, y, mask)
on_drag_leave()
on_drag_over(action, x, y, mask)
on_dsp_preset_changed()
on_focus(is_focused)
on_font_changed()
on_get_album_art_done(handle, art_id, image)
on_http_request_done(task_id, success, response_text, status, response_headers)
on_item_focus_change(playlistIndex, from, to)
on_item_played(handle)
on_key_down(vkey)
on_key_up(vkey)
on_library_initialised()
on_library_items_added(handle_list)
on_library_items_changed(handle_list, fromhook)
on_library_items_removed(handle_list)
on_load_image_done(image_path, image)
on_locations_added(task_id, handle_list)
on_main_menu(index)
on_metadb_changed(handle_list, fromhook)
on_mouse_lbtn_dblclk(x, y, mask)
on_mouse_lbtn_down(x, y, mask)
on_mouse_lbtn_up(x, y, mask)
on_mouse_leave()
on_mouse_mbtn_dblclk(x, y, mask)
on_mouse_mbtn_down(x, y, mask)
on_mouse_mbtn_up(x, y, mask)
on_mouse_move(x, y, mask)
on_mouse_rbtn_dblclk(x, y, mask)
on_mouse_rbtn_down(x, y, mask)
on_mouse_rbtn_up(x, y, mask)
on_mouse_wheel(step)
on_mouse_wheel_h(step)
on_notify_data(name, info)
on_output_device_changed()
on_paint(gr)
on_playback_dynamic_info()
on_playback_dynamic_info_track(type)
on_playback_edited(handle)
on_playback_follow_cursor_changed(state)
on_playback_new_track(handle)
on_playback_order_changed(new_order_index)
on_playback_pause(state)
on_playback_queue_changed(origin)
on_playback_seek(time)
on_playback_starting(cmd, is_paused)
on_playback_stop(reason)
on_playback_time(time)
on_playlist_item_ensure_visible(playlistIndex, playlistItemIndex)
on_playlist_items_added(playlistIndex)
on_playlist_items_changed(playlistIndex)
on_playlist_items_removed(playlistIndex, new_count)
on_playlist_items_reordered(playlistIndex)
on_playlist_items_replaced(playlistIndex)
on_playlist_items_selection_change()
on_playlist_stop_after_current_changed(state)
on_playlist_switch()
on_playlists_changed()
on_replaygain_mode_changed(new_mode)
on_run_cmd_async_done(task_id)
on_script_unload()
on_selection_changed()
on_size()
on_volume_change(val)
